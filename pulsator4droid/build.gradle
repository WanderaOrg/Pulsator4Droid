apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'
apply from: '../config/quality/quality.gradle'

def packageName = 'com.wandera.android'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'pulsator4droid'

    publishedGroupId = 'pl.bclogic'
    libraryName = 'pulsator4droid'
    artifact = 'pulsator4droid'

    libraryDescription = 'Pulse animation for Android'

    siteUrl = 'https://github.com/booncol/Pulsator4Droid'
    gitUrl = 'https://github.com/booncol/Pulsator4Droid.git'

    libraryVersion = VERSION_NAME

    developerId = 'booncol'
    developerName = 'Lukasz Majda'
    developerEmail = 'lukasz.majda@gmail.com'

    licenseName = 'The MIT License (MIT)'
    licenseUrl = 'https://raw.githubusercontent.com/booncol/Pulsator4Droid/master/LICENSE'
    allLicenses = ["MIT"]
}

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 3
        version VERSION_NAME
        archivesBaseName = "pulsator4droid"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }
    lintOptions {
        abortOnError false
    }

    libraryVariants.all { variant ->
        println "variant: " + variant.baseName
        variant.outputs.all { output ->
            if (outputFile != null && outputFileName.endsWith('.aar')) {
                // LibraryVariant object does not have #versionNameSuffix
                def suffix = variant.baseName == "debug" ? "-SNAPSHOT" : ""
                outputFileName = "${archivesBaseName}-${version}${suffix}.aar"
                println "outputFileName: " + outputFileName
            }
        }
    }

    // workaround for https://github.com/gradle/gradle/issues/8328
    // The name is properly built and reported in the script above, but the output file names are simply
    // pulsator4droid-debug.aar and pulsator4droid-release.aar
    afterEvaluate {
        def debugFile = file("$buildDir/outputs/aar/${archivesBaseName}-debug.aar")
        tasks.named("assembleDebug").configure {
            doLast {
                debugFile.renameTo("$buildDir/outputs/aar/${archivesBaseName}-${version}-SNAPSHOT.aar")
            }
        }
        def releaseFile = file("$buildDir/outputs/aar/${archivesBaseName}-release.aar")
        tasks.named("assembleRelease").configure {
            doLast {
                releaseFile.renameTo("$buildDir/outputs/aar/${archivesBaseName}-${version}.aar")
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

publishing {
    repositories {
        maven {
            credentials {
                username "${artifactory_user}"
                password "${artifactory_password}"
            }
            url "${artifactory_contextUrl}/libs-release-local"
        }
    }
    publications {
        aar(MavenPublication) {
            groupId = packageName
            artifactId = archivesBaseName
            def targetFile = "$buildDir/outputs/aar/${archivesBaseName}-${version}.aar"
            println "publishing: " + targetFile
            // Tell maven to prepare the generated "*.aar" file for publishing
            artifact(targetFile)
        }
    }
}